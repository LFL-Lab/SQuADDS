name: Test Requirements

on:
  push:
    branches:
      - master
    paths:
      - 'requirements*.txt'
      - 'environment*.yml'
      - 'setup.py'
  pull_request:
    branches:
      - master
    paths:
      - 'requirements*.txt'
      - 'environment*.yml'
      - 'setup.py'
  workflow_dispatch:

jobs:
  test-requirements:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.10']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          auto-activate-base: false

      - name: Create fresh test environment
        shell: bash -l {0}
        run: |
          echo "Creating fresh conda environment..."
          conda create -y -n squadds-test python=${{ matrix.python-version }}
          conda activate squadds-test
          python --version

      - name: Install SQuADDS
        shell: bash -l {0}
        run: |
          conda activate squadds-test
          pip install --upgrade pip
          pip install -e .

      - name: Test core dependencies
        shell: bash -l {0}
        run: |
          conda activate squadds-test
          python -c "
          import sys
          packages = [
              'dask', 'datasets', 'huggingface_hub', 'numpy', 'pandas',
              'scipy', 'scqubits', 'qutip', 'streamlit'
          ]
          failed = []
          for package in packages:
              try:
                  __import__(package)
                  print(f'✅ {package} imports successfully')
              except ImportError as e:
                  print(f'❌ Failed to import {package}: {e}')
                  failed.append(package)
          if failed:
              sys.exit(1)
          "

      - name: Test optional dependencies
        shell: bash -l {0}
        run: |
          conda activate squadds-test
          python -c "
          import sys
          packages = [
              'memory_profiler', 'numba', 'prettytable', 'psutil',
              'pyaedt', 'pyarrow', 'pyEPR', 'pyEPR_quantum',
              'python-dotenv', 'seaborn', 'setuptools', 'tabulate',
              'tqdm', 'cython', 'addict', 'datashader', 'joblib',
              'requests', 'PyGithub', 'GitPython', 'gdspy'
          ]
          failed = []
          for package in packages:
              try:
                  __import__(package)
                  print(f'✅ {package} imports successfully')
              except ImportError as e:
                  print(f'❌ Failed to import {package}: {e}')
                  failed.append(package)
          if failed:
              sys.exit(1)
          "

      - name: Test SQuADDS functionality
        shell: bash -l {0}
        run: |
          conda activate squadds-test
          python -c "
          from squadds.core.utils import set_huggingface_api_key, set_github_token
          from squadds.database.utils import create_contributor_info
          print('✅ SQuADDS core modules import successfully')
          "

      - name: Test .env file creation
        shell: bash -l {0}
        run: |
          conda activate squadds-test
          python -c "
          from squadds.database.utils import create_contributor_info
          create_contributor_info()
          print('✅ .env file creation successful')
          "

      - name: Cleanup
        if: always()
        shell: bash -l {0}
        run: |
          conda deactivate
          conda env remove -n squadds-test
